{"ast":null,"code":"import _slicedToArray from \"/Users/megetzi/Documents/GitHub/Social-Trip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/megetzi/Documents/GitHub/Social-Trip/src/Admin/Components/EventsTable.js\";\n\nimport React from 'react';\nimport { MDBDataTable, MDBContainer, MDBBtn, MDBModalFooter, MDBModalHeader, MDBModal, MDBRow } from 'mdbreact';\nimport { useEffect, useState, useRef } from 'react';\nimport { storage, db } from '../../index';\nimport UploadEvent from '../UploadEvent';\n\nvar EventsTable = function EventsTable() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setopen = _useState2[1];\n\n  var eventNameRef = useRef(null);\n  var imageNameRef = useRef(null);\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      events = _useState4[0],\n      setevents = _useState4[1];\n\n  var _useState5 = useState({\n    index: 1\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalIsOpen = _useState6[0],\n      setmodalIsOpen = _useState6[1];\n\n  var objArray = [];\n  var data = {\n    columns: [{\n      label: 'שם',\n      field: 'name',\n      sort: 'asc',\n      width: 150\n    }, {\n      label: 'תאריך',\n      field: 'date',\n      sort: 'asc',\n      width: 270\n    }, {\n      label: 'קהל יעד',\n      field: 'audience',\n      sort: 'asc',\n      width: 200\n    }, {\n      label: 'מחק אירוע',\n      field: 'delete',\n      sort: 'asc',\n      width: 100\n    }, {\n      label: 'צפייה בנרשמים',\n      field: 'participants',\n      sort: 'asc',\n      width: 150\n    }],\n    rows: events\n  };\n\n  var areYouSure = function areYouSure(event) {\n    eventNameRef.current = event.target.id;\n    setopen(true);\n  };\n\n  var deleteHandler = function deleteHandler() {\n    var imageUrl;\n    var currentEvent = db.collection('events').doc(\"\".concat(eventNameRef.current));\n    currentEvent.get().then(function (snapshot) {\n      console.log(snapshot.data.url);\n    });\n  };\n\n  useEffect(function () {\n    console.log(modalIsOpen);\n    var date;\n    db.collection('events').get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (item) {\n        date = item.data().date;\n        date = date.toString().split(\"-\").reverse().join(\"-\");\n        objArray.push({\n          name: item.data().eventName,\n          date: date,\n          audience: item.data().audiance,\n          delete: /*#__PURE__*/React.createElement(MDBBtn, {\n            size: \"sm\",\n            outline: true,\n            color: \"danger\",\n            id: \"\".concat(item.data().eventName),\n            onClick: areYouSure,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }\n          }, \"\\u05DE\\u05D7\\u05E7\"),\n          participants: /*#__PURE__*/React.createElement(MDBBtn, {\n            size: \"sm\",\n            outline: true,\n            color: \"blue\",\n            id: \"\".concat(item.data().eventName),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 39\n            }\n          }, \"\\u05E6\\u05E4\\u05D9\\u05D9\\u05D4 \\u05D1\\u05E0\\u05E8\\u05E9\\u05DE\\u05D9\\u05DD\")\n        });\n      });\n      setevents(objArray);\n    });\n  }, [open, modalIsOpen]);\n  return /*#__PURE__*/React.createElement(MDBContainer, {\n    style: {\n      backgroundColor: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MDBDataTable, {\n    entriesLabel: \"\\u05DE\\u05E1\\u05E4\\u05E8 \\u05D4\\u05E2\\u05E8\\u05DB\\u05D9\\u05DD \\u05D1\\u05D8\\u05D1\\u05DC\\u05D4\",\n    paginationLabel: [\"הקודם\", \"הבא\"],\n    infoLabel: [\"מראה\", \"עד\", \"מתוך\", \"ערכים\"],\n    className: \"text-right justify-content-center\",\n    searchLabel: \"\\u05D7\\u05D9\\u05E4\\u05D5\\u05E9\",\n    btn: true,\n    scrollY: true,\n    maxHeight: \"65vh\",\n    striped: true,\n    bordered: true,\n    small: true,\n    data: data,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(MDBModal, {\n    isOpen: open,\n    toggle: function toggle() {\n      return setopen(false);\n    },\n    backdrop: true,\n    size: \"sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MDBModalHeader, {\n    style: {\n      backgroundColor: \"#ff4444\"\n    },\n    className: \"text-white justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, \"\\u05D4\\u05D0\\u05DD \\u05DC\\u05DE\\u05D7\\u05D5\\u05E7 \\u05D0\\u05EA \\u05D4\\u05D0\\u05D9\\u05E8\\u05D5\\u05E2?\"), /*#__PURE__*/React.createElement(MDBModalFooter, {\n    className: \"justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MDBBtn, {\n    color: \"danger\",\n    onClick: function onClick() {\n      return setopen(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, \"\\u05D1\\u05D9\\u05D8\\u05D5\\u05DC\"), /*#__PURE__*/React.createElement(MDBBtn, {\n    outline: true,\n    color: \"danger\",\n    onClick: deleteHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, \"\\u05DE\\u05D7\\u05E7\"))), /*#__PURE__*/React.createElement(MDBRow, {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(UploadEvent, {\n    value: function value(i) {\n      return setmodalIsOpen({\n        index: i\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default EventsTable;","map":{"version":3,"sources":["/Users/megetzi/Documents/GitHub/Social-Trip/src/Admin/Components/EventsTable.js"],"names":["React","MDBDataTable","MDBContainer","MDBBtn","MDBModalFooter","MDBModalHeader","MDBModal","MDBRow","useEffect","useState","useRef","storage","db","UploadEvent","EventsTable","open","setopen","eventNameRef","imageNameRef","events","setevents","index","modalIsOpen","setmodalIsOpen","objArray","data","columns","label","field","sort","width","rows","areYouSure","event","current","target","id","deleteHandler","imageUrl","currentEvent","collection","doc","get","then","snapshot","console","log","url","date","querySnapshot","forEach","item","toString","split","reverse","join","push","name","eventName","audience","audiance","delete","participants","backgroundColor","i"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { MDBDataTable, MDBContainer, MDBBtn, MDBModalFooter, MDBModalHeader, MDBModal, MDBRow } from 'mdbreact';\nimport { useEffect, useState, useRef } from 'react'\nimport { storage, db } from '../../index'\nimport UploadEvent from '../UploadEvent'\n\nconst EventsTable = () => {\n    const [open, setopen] = useState(false)\n    const eventNameRef = useRef(null)\n    const imageNameRef = useRef(null)\n    const [events, setevents] = useState([])\n    const [modalIsOpen, setmodalIsOpen] = useState({ index: 1 })\n    const objArray = []\n    const data = {\n        columns: [\n            {\n                label: 'שם',\n                field: 'name',\n                sort: 'asc',\n                width: 150\n            },\n            {\n                label: 'תאריך',\n                field: 'date',\n                sort: 'asc',\n                width: 270\n            },\n            {\n                label: 'קהל יעד',\n                field: 'audience',\n                sort: 'asc',\n                width: 200\n            },\n            {\n                label: 'מחק אירוע',\n                field: 'delete',\n                sort: 'asc',\n                width: 100\n            },\n            {\n                label: 'צפייה בנרשמים',\n                field: 'participants',\n                sort: 'asc',\n                width: 150\n            },\n        ],\n\n        rows: events\n\n\n    };\n\n\n\n\n    const areYouSure = (event) => {\n\n        eventNameRef.current = event.target.id\n        setopen(true)\n    }\n\n    const deleteHandler = () => {\n        var imageUrl\n        var currentEvent = db.collection('events').doc(`${eventNameRef.current}`)\n        currentEvent.get()\n        .then(snapshot => {\n            console.log(snapshot.data.url)\n        })\n    }\n\n    useEffect(() => {\n        console.log(modalIsOpen)\n        let date\n        db.collection('events').get()\n            .then(querySnapshot => {\n                querySnapshot.forEach(item => {\n                    date = item.data().date\n                    date = date.toString().split(\"-\").reverse().join(\"-\")\n                    objArray.push({\n                        name: item.data().eventName,\n                        date: date,\n                        audience: item.data().audiance,\n                        delete: <MDBBtn size=\"sm\" outline color=\"danger\" id={`${item.data().eventName}`} onClick={areYouSure} >מחק</MDBBtn>,\n                        participants: <MDBBtn size=\"sm\" outline color=\"blue\" id={`${item.data().eventName}`} >צפייה בנרשמים</MDBBtn>\n                    })\n                })\n                setevents(objArray)\n            })\n    }, [open, modalIsOpen])\n\n    return (\n        <MDBContainer style={{ backgroundColor: \"white\" }}>\n            <MDBDataTable\n                entriesLabel=\"מספר הערכים בטבלה\"\n                paginationLabel={[\"הקודם\", \"הבא\"]}\n                infoLabel={[\"מראה\", \"עד\", \"מתוך\", \"ערכים\"]}\n                className=\"text-right justify-content-center\"\n                searchLabel=\"חיפוש\"\n                btn\n                scrollY\n                maxHeight=\"65vh\"\n                striped\n                bordered\n                small\n                data={data}\n            />\n            <MDBModal isOpen={open} toggle={() => setopen(false)}\n                backdrop={true}\n                size=\"sm\"\n            >\n                <MDBModalHeader style={{ backgroundColor: \"#ff4444\" }} className=\"text-white justify-content-center\" >האם למחוק את האירוע?</MDBModalHeader>\n                <MDBModalFooter className=\"justify-content-center\">\n                    <MDBBtn color=\"danger\" onClick={() => setopen(false)}>ביטול</MDBBtn>\n                    <MDBBtn outline color=\"danger\" onClick={deleteHandler}>מחק</MDBBtn>\n                </MDBModalFooter>\n            </MDBModal>\n            <MDBRow className=\"text-center\">\n                <UploadEvent value={(i) => setmodalIsOpen({ index: i })} />\n            </MDBRow>\n        </MDBContainer>\n    );\n}\n\nexport default EventsTable;"]},"metadata":{},"sourceType":"module"}